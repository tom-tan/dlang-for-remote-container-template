name: Build containers

on:
  push:
    branches:
      - master
  schedule:
    - cron:  '10 4 * * *'

jobs:
  build:
    # Prevent from building in cloned repos
    if: github.repository_owner == 'tom-tan'
    strategy:
      matrix:
        dc: [dmd, ldc, gdc]
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/cache@v2
        with:
          path: ~/dc-versions
          key: ${{ matrix.dc }}
      - id: get_release
        run: |
          if [ "${dc}" = dmd ]; then
            link=http://downloads.dlang.org/releases/LATEST
          elif [ "${dc}" = ldc ]; then
            link=https://ldc-developers.github.io/LATEST
          elif [ "${dc}" = gdc ]; then
            link=https://gdcproject.org/downloads/LATEST
          else
            link=""
          fi

          if [ -n "$link" ]; then
            latest=$(curl --connect-timeout 10 -fsSL $link)
          else
            latest=""
          fi

          if [ -e ~/dc-versions/$dc ]; then
            cur="$(cat ~/dc-versions/$dc)"
          else
            cur=""
          fi
 
          if [ -z "$latest" -o "$latest" = "$cur" ]; then
            echo "::set-output name=need_update::false"
            echo "::set-output name=latest::"
          else
            echo "::set-output name=need_update::true"
            echo "::set-output name=latest::$latest"
          fi
        env:
          dc: ${{ matrix.dc }}
      - name: Set up QEMU
        if: steps.get_release.outputs.need_update == 'true'
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .devcontainer/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.dc }}:${{ steps.get_release.outputs.latest }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.dc }}:latest
          build-args: |
            VARIANT=ubuntu-20.04
            DC_NAME=${{ matrix.dc }}
            DC_VERSION=${{ steps.get_release.outputs.latest }}
      - name: Cachee latest version info
        run: |
          mkdir -p ~/dc-versions
          echo $latest > ~/dc-vesions/$dc
        env:
          dc: ${{ matrix.dc }}
          latest: ${{ steps.get_release.outputs.latest }}
